/*

谈谈你对Vue源码的理解
1) Vue中有数据代理,还有模版解析及双向数据绑定,数据劫持和监视
首先,在实例化Vue的时候,内部会先把data对象中所有的属性进行遍历,通过Object.defineProperty()方法把data中的每个属性一个一个的添加到vm对象上,从而实现数据代理
然后,把实例化Vue的时候内部的el属性中对应的选择器传给对应的模版解析对象,内部根据选择器获取html中对应的容器对象,创建文档碎片对象(可以理解为虚拟DOM),把容器对象中所有的子节点全部的放进文档碎片对象中,遍历里面所有的节点,判断节点是标签还是文本及符合插值的正则
如果是标签,获取该标签中所有的属性,判断属性是不是指令,如果是指令,再次判断是事件指令还是普通指令
  如果是事件指令,通过addEventListener为当前的节点标签绑定对应的事件
  如果是普通指令,还要获取该指令是不是双向数据绑定指令
    如果是v-model的这个指令
      则使用addEventListener为当前的标签绑定对应的input事件
      剩下的其他的普通指令,也会执行下面的内容
    最终都会调用updater对象中相关的方法进行解析
    如果是文本且符合插值正则,最终也会进入到updater对象中相关的方法
    以上都会进入到bind方法,内部开始创建监视对象(html容器中有一个表达式就创建一个watcher对象)
    在watcher对象内部为了获取表达式的值,开始建立dep和watcher对象的关系
  dep和watcher之间的关系如下:
      1对1的关系:一个dep对应一个watcher的关系,data中一个属性,html容器中一个表达式
      1对多的关系:一个dep对应多个watcher的关系,data中一个属性,html容器中多个表达式
      多对1的关系:多个dep对应一个watcher的关系,data中多个属性,html容器中一个表达式
      多对多的关系:多个dep对应多个watcher的关系,data中多个属性,html容器中多个表达式

    如果要修改数据,那么这个数据对应的属性对应的dep会通知watcher进行数据的更新,及界面的重新渲染
    以上就是数据代理及模版解析及数据劫持的理解







 */